pipeline {
   agent {
        node {
            label 'agent-1'
        }
    }
    
    options {
        timeout(time: 1, unit: 'HOURS')
        disableConcurrentBuilds()
        ansiColor('xterm')
    }

    parameters {
        choice(name: 'action', choices: ['apply', 'destroy'])
    }

    

    stages {
        stage('Terraform Init Command') {
            steps {
                script {
                    dir('vpc') {
                        sh 'terraform init -reconfigure'
                    }
                }
            }
        }

        stage('Terraform Plan command Run') {
            steps {
                script {
                    dir('vpc') {
                        sh 'terraform plan'
                    }
                }
            }
        }

        stage('Terraform Apply') {
            when {
                expression {
                    params.action == 'apply'
                }
            }

            input {
                message 'Should we continue?'
                ok 'yes, we should'
            }

            steps {
                script {
                    dir('vpc') {
                        sh 'terraform apply -auto-approve'
                    }
                }
            }
        }

        stage('Terraform Destroy') {
            when {
                expression {
                    params.action == 'destroy'
                }
            }

            input {
                message 'Should we destroy?'
                ok 'yes, we should'
            }

            steps {
                script {
                    dir('vpc') {
                        sh 'terraform destroy -auto-approve'
                    }
                }
            }
        }
    }
}
